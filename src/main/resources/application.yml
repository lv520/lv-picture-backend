server:
  port: 8123
  servlet:
    context-path: /api
    session:
      cookie:
        max-age: 2592000

spring:
  application:
    name: lv-picture-backend
    #数据库驱动
  datasource:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/lv_picture
      username: root
      password: root
      # Redis 配置
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
    #password: 000000
      # session 配置
  session:
    store-type: redis
        # session 30 天过期
    timeout: 2592000
  # 开放更大的文件上传体积 spring boot默认为1M
  servlet:
    multipart:
      max-file-size: 10MB
  # 空间图片分表
  shardingsphere:
    datasource:
      names: lv_picture
      lv_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/lv_picture
        username: root
        password: root
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: lv_picture.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.lvhui.lvpicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      sql-show: true
   # Redis 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # 仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
    enable-sql-runner: true








#houduan接口文档生成
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: v1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.lvhui.lvpicturebackend.controller




## 对象存储配置（需要从腾讯云获取）
cos:
  client:
    host: https://lv-picture-1314104238.cos.ap-shanghai.myqcloud.com
    secretId: AKIDUny1tZ6ax7GFIEE6lHbkldKpT2NVQ8f2
    secretKey: IPIya5Ne7QXbXo5JPSRRPF5rRp170f7N
    region: ap-shanghai
    bucket: lv-picture-1314104238

# 阿里云 AI 配置
aliYunAi:
  apiKey: sk-151c05163d1c4d1ea7cc90c36195bf70